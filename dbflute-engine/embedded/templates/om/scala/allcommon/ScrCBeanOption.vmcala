##
## Copyright 2014-2019 the original author or authors.
##
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
##     http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
## either express or implied. See the License for the specific language
## governing permissions and limitations under the License.
##
${database.allClassCopyright}package ${glPackageBaseCommon};

import java.util.Date;

import org.dbflute.cbean.ManualOrderBean;
import org.dbflute.cbean.coption._;
import org.dbflute.cbean.chelper.HpMobConnectedBean

/**
 * The option of like-search as Scala runtime.
 * @author ${database.classAuthor}
 */
class ScrLikeSearchOption extends LikeSearchOption {
}

/**
 * The option of from-to as Scala runtime.
 * @author ${database.classAuthor}
 */
class ScrFromToOption extends FromToOption {
}

/**
 * The option of range-of as Scala runtime.
 * @author ${database.classAuthor}
 */
class ScrRangeOfOption extends RangeOfOption {
}

/**
 * The beao of manual-order as Scala runtime.
 * @author ${database.classAuthor}
 */
class ScrManualOrderBean extends ManualOrderBean {

    def when_FromTo(fromDate: Date, toDate: Date)(optionCall: (ScrFromToOption) => Unit): HpMobConnectedBean = {
        val option = new ScrFromToOption(); optionCall(option);
        super.when_FromTo(fromDate, toDate, option);
    }
}

/**
 * The beao of column conversion as Scala runtime.
 * @author ${database.classAuthor}
 */
class ScrColumnConversionOption extends ColumnConversionOption {
}
