##
## Copyright 2014-2019 the original author or authors.
##
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
##     http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
## either express or implied. See the License for the specific language
## governing permissions and limitations under the License.
##
${database.allClassCopyright}package ${glPackageBaseCommon};

import org.dbflute.optional.RelationOptionalFactory;
import org.dbflute.optional.OptionalObjectExceptionThrower;

/**
 * @author ${database.classAuthor}
 */
class ScrRelationOptionalFactory extends RelationOptionalFactory {

    override protected def createOptionalNullEntity(thrower: OptionalObjectExceptionThrower): Object = {
        return Option.empty;
    }

    override protected def createOptionalPresentEntity(relationRow: Object): Object = {
        return Option.apply(relationRow);
    }

    override def getOptionalEntityType(): Class[_] = {
        return classOf[Option[_]];
    }

    override def orElseNull(optional: Object): Object = {
        return optional.asInstanceOf[Option[Object]].orNull;
    }
}
