##
## Copyright 2014-2020 the original author or authors.
##
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
##     http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
## either express or implied. See the License for the specific language
## governing permissions and limitations under the License.
##

## ===================================================================================
##                                                                          Simple Dto
##                                                                          ==========
#if ($database.hasSimpleDtoDefinition())
  $database.enableSimpleDtoOutputDirectory()
  $database.deleteOldSimpleDtoTableClass()
  $database.info("parseSimpleDto() {")

  #set ($myDomainEntityPackageName = "${glPackageExtendedEntity}")
  #set ($myBaseEntityPackageName = "${database.simpleDtoBaseDtoPackage}")
  #set ($myExtendedEntityPackageName = "${database.simpleDtoExtendedDtoPackage}")

  #set ($path = $database.getPackageAsPath(${myBaseEntityPackageName}))
  $database.makeDirectory($path)
  #set ($path = $database.getPackageAsPath(${myExtendedEntityPackageName}))
  $database.makeDirectory($path)

  #foreach ($table in $database.tableList)
    #if ($table.isSimpleDtoDomainTableTarget())
      #set ($myBaseObjectClassName = "${table.simpleDtoBaseDtoClassName}")
      #set ($myExtendedObjectClassName = "${table.simpleDtoExtendedDtoClassName}")

      $database.info("    parse('${myExtendedObjectClassName}');")

      #set ( $path = "${database.getPackageAsPath(${myBaseEntityPackageName})}${myBaseObjectClassName}.${glClassFileExtension}" )
      $generator.parse("om/${glResourceDirectory}/plugin/simpledto/SimpleDtoBaseEntity.${glTemplateFileExtension}", $path, "table", $table)

      #if (!$database.isStopGenerateExtendedEntity())
        #set ( $path = "${database.getPackageAsPath(${myExtendedEntityPackageName})}${myExtendedObjectClassName}.${glClassFileExtension}" )
        #if (!$files.file(${generator.outputPath},$path).exists())
          $generator.parse("om/${glResourceDirectory}/plugin/simpledto/SimpleDtoExtendedEntity.${glTemplateFileExtension}", $path, "table", $table)
        #end
        $database.reflectAllExCopyright($path)
      #end
    #end
  #end
  $database.info("}")

  #if ($database.isSimpleDtoUseDtoMapper())
  $database.enableDtoMapperOutputDirectory()
  $database.deleteOldSimpleDtoMapperTableClass()
  $database.info("parseSimpleDtoMapper() {")

  #set ($myBaseDtoMapperPackageName = "${database.simpleDtoBaseMapperPackage}")
  #set ($myExtendedDtoMapperPackageName = "${database.simpleDtoExtendedMapperPackage}")

  #set ($path = $database.getPackageAsPath(${myBaseDtoMapperPackageName}))
  $database.makeDirectory($path)
  #set ($path = $database.getPackageAsPath(${myExtendedDtoMapperPackageName}))
  $database.makeDirectory($path)

  #foreach ($table in $database.tableList)
    #if ($table.isSimpleDtoDomainTableTarget())
      #set ($myBaseObjectClassName = "${table.simpleDtoBaseDtoClassName}")
      #set ($myExtendedObjectClassName = "${table.simpleDtoExtendedDtoClassName}")
      #set ($myBaseDtoMapperClassName = "${table.simpleDtoBaseMapperClassName}")
      #set ($myExtendedDtoMapperClassName = "${table.simpleDtoExtendedMapperClassName}")

      $database.info("    parse('${myExtendedDtoMapperClassName}');")

      #set ( $path = "${database.getPackageAsPath(${myBaseDtoMapperPackageName})}${myBaseDtoMapperClassName}.${glClassFileExtension}" )
      $generator.parse("om/${glResourceDirectory}/plugin/simpledto/mapper/SimpleDtoBaseMapper.${glTemplateFileExtension}", $path, "table", $table)

      #if (!$database.isStopGenerateExtendedEntity())
        #set ( $path = "${database.getPackageAsPath(${myExtendedDtoMapperPackageName})}${myExtendedDtoMapperClassName}.${glClassFileExtension}" )
        #if (!$files.file(${generator.outputPath},$path).exists())
          $generator.parse("om/${glResourceDirectory}/plugin/simpledto/mapper/SimpleDtoExtendedMapper.${glTemplateFileExtension}", $path, "table", $table)
        #end
        $database.reflectAllExCopyright($path)
      #end
    #end
  #end
  $database.info("}")
  #end
  $database.backToGenerateOutputDirectory()
#end
#if ($database.hasSimpleCDefDefinition())
  $database.enableSimpleCDefOutputDirectory()
  $database.info("parseSimpleCDef() {")

  #set ($path = $database.getPackageAsPath(${database.simpleCDefPackage}))
  $database.makeDirectory($path)

  #if ($database.hasClassificationDefinition())
    $database.info("    parse('SimpleCDef');")
    #set ( $path = "${database.getPackageAsPath(${database.simpleCDefPackage})}${database.simpleCDefClass}.${glClassFileExtension}" )
    $generator.parse("om/${glResourceDirectory}/plugin/simpledto/SimpleCDef.${glTemplateFileExtension}",$path ,"" ,"")
  #end

  $database.info("}")
  $database.backToGenerateOutputDirectory()
#end
