<project name="DBFlute" default="dist" basedir=".">

	<!-- ============================================================================= -->
	<!--                                          P R O P E R T Y  D E F I N I T I O N -->
	<!--                                          ==================================== -->

	<!-- Version -->
	<property name="version" value="1.2.0" />
	<property name="build.version" value="${version}-RC3-B-SNAPSHOT" />
	<property name="runtime.version" value="1.2.0" />
	<property name="runtime.build.version" value="${runtime.version}-RC3-B-SNAPSHOT" />
	<property name="example.latest.version" value="1.x" />

	<!-- Base Directories -->
	<property name="workspace.base" value="../.." />
	<property name="dbflute.base" value="${workspace.base}/dbflute-core" />
	<property name="dbflute.howto.dir" value="${workspace.base}/dbflute-howto" />
	<property name="dbflute.www.base" value="${workspace.base}/dbflute-www" />
	<property name="test.active.stage.base" value="${workspace.base}" />
	<property name="test.dbms.stage.base" value="${workspace.base}" />
	<property name="test.option.stage.base" value="${workspace.base}" />
	<property name="example.on.stage.base" value="${workspace.base}" />
	<property name="tryout.base" value="${workspace.base}/dbflute-tryout" />

	<!-- Point Directories -->
	<property name="dist" value="dist" />
	<property name="embedded" value="embedded" />
	<property name="runtime.dir" value="${dbflute.base}/dbflute-runtime" />
	<property name="extraction.dir" value="${dist}/extraction" />
	<property name="stage.dir" value="${dbflute.www.base}/download" />

	<!-- Jar Files -->
	<property name="engine.jar" value="dbflute.jar" />
	<property name="runtime.jar" value="dbflute-runtime-${runtime.version}.jar" />
	<property name="runtime.sources.jar" value="dbflute-runtime-${runtime.version}-sources.jar" />
	<property name="runtime.build.jar" value="dbflute-runtime-${runtime.build.version}.jar" />
	<property name="runtime.sources.build.jar" value="dbflute-runtime-${runtime.build.version}-sources.jar" />
	<property name="runtime.nonversion.jar" value="dbflute-runtime.jar" />
	<property name="runtime.sources.nonversion.jar" value="dbflute-runtime-sources.jar" />
	<property name="module.zip" value="dbflute-${version}.zip" />
	<property name="module.build.zip" value="dbflute-${build.version}.zip" />

	<!-- Test: Active Stage -->
	<property name="test.active.dockside.dir" value="${test.active.stage.base}/dbflute-test-active-dockside" />
	<property name="test.active.hangar.dir" value="${test.active.stage.base}/dbflute-test-active-hangar" />

	<!-- Test: DBMS Stage -->
	<property name="test.dbms.mysql.dir" value="${test.dbms.stage.base}/dbflute-test-dbms-mysql" />
	<property name="test.dbms.postgresql.dir" value="${test.dbms.stage.base}/dbflute-test-dbms-postgresql" />
	<property name="test.dbms.oracle.dir" value="${test.dbms.stage.base}/dbflute-test-dbms-oracle" />
	<property name="test.dbms.db2.dir" value="${test.dbms.stage.base}/dbflute-test-dbms-db2" />
	<property name="test.dbms.sqlserver.dir" value="${test.dbms.stage.base}/dbflute-test-dbms-sqlserver" />
	<property name="test.dbms.derby.dir" value="${test.dbms.stage.base}/dbflute-test-dbms-derby" />
	<property name="test.dbms.sqlite.dir" value="${test.dbms.stage.base}/dbflute-test-dbms-sqlite" />

	<!-- Test: Option Stage -->
	<property name="test.option.compatible10x.dir" value="${test.option.stage.base}/dbflute-test-option-compatible10x" />

	<!-- SubProject Examples -->
	<property name="example.on.parade.dir" value="${example.on.stage.base}/dbflute-example-on-parade" />
	<property name="example.on.springboot.dir" value="${example.on.stage.base}/dbflute-example-on-springboot" />
	<property name="example.on.play2java.dir" value="${example.on.stage.base}/dbflute-example-on-play2java" />
	<property name="example.with.non.rdb" value="${example.on.stage.base}/dbflute-example-with-non-rdb" />
	<property name="example.with.doma.dir" value="${example.on.stage.base}/dbflute-example-with-doma" />

	<!-- ============================================================================= -->
	<!--                                                        C O M P I L E  T A S K -->
	<!--                                                        ====================== -->

	<target name="clean">
		<delete dir="target/classes" />
		<mkdir dir="target/classes" />
	</target>

	<target name="copy-resources">
		<copy todir="target/classes">
			<fileset dir="src/main/java">
				<exclude name="**/*.java" />
			</fileset>
			<fileset dir="src/main/resources">
				<exclude name="**/*.java" />
			</fileset>
		</copy>
	</target>

	<target name="compile" depends="clean, copy-resources" description="==> compiles sources">

		<echo message="+------------------------------------------+" />
		<echo message="|                                          |" />
		<echo message="| Compiling sources!                       |" />
		<echo message="|                                          |" />
		<echo message="+------------------------------------------+" />

		<javac destdir="target/classes" encoding="UTF-8" debug="true">
			<src path="src/main/java" />
			<src path="src/main/resources" />
			<classpath>
				<fileset dir="lib">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
			<include name="**/*" />
			<compilerarg value="-Xlint:deprecation" />
			<compilerarg value="-Xlint:unchecked" />
		</javac>
	</target>

	<!-- ============================================================================= -->
	<!--                                              D I S T R I B U T I O N  T A S K -->
	<!--                                              ================================ -->

	<target name="dist" depends="compile" description="==> generates distribution">

		<echo message="+------------------------------------------+" />
		<echo message="|                                          |" />
		<echo message="| Generating dist for YOUR datamodel!      |" />
		<echo message="|                                          |" />
		<echo message="+------------------------------------------+" />

		<mkdir dir="${dist}" />

		<delete file="${embedded}/lib/${engine.jar}" />
		<jar jarfile="${embedded}/lib/${engine.jar}" basedir="target/classes">
		</jar>

		<copy overwrite="true" file="${embedded}/etc/client-template/_project.bat" tofile="${embedded}/etc/client-template/dbflute_dfclient/_project.bat">
			<filterset>
				<filter token="dbflute.version" value="${build.version}" />
			</filterset>
		</copy>
		<copy overwrite="true" file="${embedded}/etc/client-template/_project.sh" tofile="${embedded}/etc/client-template/dbflute_dfclient/_project.sh">
			<filterset>
				<filter token="dbflute.version" value="${build.version}" />
			</filterset>
		</copy>
		<delete file="${embedded}/etc/client-template/dbflute_dfclient.zip" />
		<zip zipfile="${embedded}/etc/client-template/dbflute_dfclient.zip">
			<zipfileset prefix="dbflute_dfclient" dir="${embedded}/etc/client-template/dbflute_dfclient" />
		</zip>

		<tstamp>
			<format property="now.date" pattern="yyyy-MM-dd HH:mm:ss.SSS" />
		</tstamp>

		<delete file="${embedded}/mark/product-is-dbflute-${version}" />
		<copy overwrite="true" file="${embedded}/mark/product-is-dbflute" tofile="${embedded}/mark/product-is-dbflute-${version}">
			<filterset>
				<filter token="version" value="${build.version}" />
				<filter token="datetime" value="${now.date}" />
			</filterset>
		</copy>

		<zip zipfile="${dist}/${module.zip}">
			<zipfileset prefix="etc/cmd" dir="${embedded}/etc/cmd">
				<include name="*.cmd" />
				<include name="*.sh" />
			</zipfileset>
			<zipfileset prefix="etc/client-template" dir="${embedded}/etc/client-template">
				<include name="dbflute_dfclient.zip" />
			</zipfileset>
			<zipfileset prefix="etc/license" dir="${embedded}/etc/license">
				<include name="*.txt" />
				<include name="*.html" />
			</zipfileset>
			<zipfileset prefix="etc/logprop" dir="${embedded}/etc/logprop">
				<include name="log4j.properties" />
			</zipfileset>
			<zipfileset prefix="etc/friends/eclipse" dir="${embedded}/etc/friends/eclipse">
				<include name="*.xml" />
			</zipfileset>
			<zipfileset prefix="lib" dir="${embedded}/lib">
				<include name="*.jar" />
				<include name="*.zip" />
			</zipfileset>
			<zipfileset prefix="templates/doc" dir="${embedded}/templates/doc">
				<exclude name="**/*---.txt" />
			</zipfileset>
			<zipfileset prefix="templates/om" dir="${embedded}/templates/om">
				<include name="ControlGenerateJava.vm" />
				<include name="ControlSql2EntityJava.vm" />
				<include name="ControlGenerateScala.vm" />
				<include name="ControlSql2EntityScala.vm" />
			</zipfileset>
			<zipfileset prefix="templates/om/java" dir="${embedded}/templates/om/java">
				<exclude name="**/*---.txt" />
			</zipfileset>
			<!-- until Scala support
			<zipfileset prefix="templates/om/scala" ...>
			-->
			<zipfileset prefix="ant" dir="${embedded}/ant" />
			<zipfileset prefix="" dir="${embedded}">
				<include name="build-torque.xml" />
				<include name="LICENSE" />
				<include name="NOTICE" />
				<include name="README.txt" />
			</zipfileset>
			<zipfileset prefix="" dir="${embedded}/mark">
				<include name="product-is-dbflute-${version}" />
			</zipfileset>
		</zip>
	</target>

	<target name="runtime-dist">
		<copy file="${runtime.dir}/target/${runtime.build.jar}" tofile="${dist}/${runtime.jar}" overwrite="true" />
		<copy file="${runtime.dir}/target/${runtime.sources.build.jar}" tofile="${dist}/${runtime.sources.jar}" overwrite="true" />
		<copy file="${dist}/${runtime.jar}" tofile="lib/${runtime.nonversion.jar}" overwrite="true" />
		<copy file="${dist}/${runtime.sources.jar}" tofile="lib/sources/${runtime.sources.nonversion.jar}" overwrite="true" />
		<copy file="${dist}/${runtime.jar}" tofile="${embedded}/lib/${runtime.nonversion.jar}" overwrite="true" />
		<delete dir="${runtime.dir}/target/apidocs" />
		<delete dir="${runtime.dir}/target/java-bundle-options" />
	</target>

	<target name="adjust">
		<fixcrlf srcdir="${embedded}/templates" eol="crlf" encoding="UTF-8">
			<exclude name="**/*.vmnet" />
		</fixcrlf>
		<fixcrlf srcdir="${embedded}/templates/om/csharp" eol="crlf" encoding="UTF-8" />
	</target>

	<!-- ============================================================================= -->
	<!--                                                            S T A G E  T A S K -->
	<!--                                                            ================== -->

	<target name="stage">
		<copy file="${dist}/${module.zip}" tofile="${stage.dir}/dbflute/${module.build.zip}" overwrite="true">
		</copy>
	</target>

	<!-- ============================================================================= -->
	<!--                                                              T E S T  T A S K -->
	<!--                                                              ================ -->

	<!-- for test projects -->
	<target name="prepare-reflection">
		<delete dir="${extraction.dir}" />
		<unzip src="${dist}/${module.zip}" dest="${extraction.dir}" />
		<chmod dir="${extraction.dir}/ant/bin" perm="ugo+rx" includes="**/*" />
	</target>

	<target name="reflect-to-test-active-dockside" depends="prepare-reflection"
			description="==> reflect to test as active dockside">
		<delete dir="${test.active.dockside.dir}/mydbflute/dbflute-${example.latest.version}" />
		<copy todir="${test.active.dockside.dir}/mydbflute/dbflute-${example.latest.version}" overwrite="true">
			<fileset dir="${extraction.dir}" />
		</copy>
		<delete dir="${extraction.dir}" />
	</target>

	<target name="reflect-to-test-active-hangar" depends="prepare-reflection"
			description="==> reflect to test as active hangar">
		<delete dir="${test.active.hangar.dir}/mydbflute/dbflute-${example.latest.version}" />
		<copy todir="${test.active.hangar.dir}/mydbflute/dbflute-${example.latest.version}" overwrite="true">
			<fileset dir="${extraction.dir}" />
		</copy>
		<delete dir="${extraction.dir}" />
	</target>

	<target name="reflect-to-test-dbms-mysql" depends="prepare-reflection"
			description="==> reflect to test of DBMS MySQL">
		<delete dir="${test.dbms.mysql.dir}/mydbflute/dbflute-${example.latest.version}" />
		<copy todir="${test.dbms.mysql.dir}/mydbflute/dbflute-${example.latest.version}" overwrite="true">
			<fileset dir="${extraction.dir}" />
		</copy>
		<delete dir="${extraction.dir}" />
	</target>

	<target name="reflect-to-test-dbms-postgresql" depends="prepare-reflection"
			description="==> reflect to test of DBMS PostgreSQL">
		<delete dir="${test.dbms.postgresql.dir}/mydbflute/dbflute-${example.latest.version}" />
		<copy todir="${test.dbms.postgresql.dir}/mydbflute/dbflute-${example.latest.version}" overwrite="true">
			<fileset dir="${extraction.dir}" />
		</copy>
		<delete dir="${extraction.dir}" />
	</target>

	<target name="reflect-to-test-dbms-oracle" depends="prepare-reflection"
			description="==> reflect to test of DBMS Oracle">
		<delete dir="${test.dbms.oracle.dir}/mydbflute/dbflute-${example.latest.version}" />
		<copy todir="${test.dbms.oracle.dir}/mydbflute/dbflute-${example.latest.version}" overwrite="true">
			<fileset dir="${extraction.dir}" />
		</copy>
		<delete dir="${extraction.dir}" />
	</target>

	<target name="reflect-to-test-dbms-db2" depends="prepare-reflection"
			description="==> reflect to test of DBMS DB2">
		<delete dir="${test.dbms.db2.dir}/mydbflute/dbflute-${example.latest.version}" />
		<copy todir="${test.dbms.db2.dir}/mydbflute/dbflute-${example.latest.version}" overwrite="true">
			<fileset dir="${extraction.dir}" />
		</copy>
		<delete dir="${extraction.dir}" />
	</target>

	<target name="reflect-to-test-dbms-sqlserver" depends="prepare-reflection"
			description="==> reflect to test of DBMS SQLServer">
		<delete dir="${test.dbms.sqlserver.dir}/mydbflute/dbflute-${example.latest.version}" />
		<copy todir="${test.dbms.sqlserver.dir}/mydbflute/dbflute-${example.latest.version}" overwrite="true">
			<fileset dir="${extraction.dir}" />
		</copy>
		<delete dir="${extraction.dir}" />
	</target>

	<target name="reflect-to-test-dbms-derby" depends="prepare-reflection"
			description="==> reflect to test of DBMS SQLServer">
		<delete dir="${test.dbms.derby.dir}/mydbflute/dbflute-${example.latest.version}" />
		<copy todir="${test.dbms.derby.dir}/mydbflute/dbflute-${example.latest.version}" overwrite="true">
			<fileset dir="${extraction.dir}" />
		</copy>
		<delete dir="${extraction.dir}" />
	</target>

	<target name="reflect-to-test-dbms-sqlite" depends="prepare-reflection"
			description="==> reflect to test of DBMS SQLite">
		<delete dir="${test.dbms.sqlite.dir}/mydbflute/dbflute-${example.latest.version}" />
		<copy todir="${test.dbms.sqlite.dir}/mydbflute/dbflute-${example.latest.version}" overwrite="true">
			<fileset dir="${extraction.dir}" />
		</copy>
		<delete dir="${extraction.dir}" />
	</target>

	<target name="reflect-to-test-option-compatible10x" depends="prepare-reflection"
			description="==> reflect to test of option for compatible10x">
		<delete dir="${test.option.compatible10x.dir}/mydbflute/dbflute-${example.latest.version}" />
		<copy todir="${test.option.compatible10x.dir}/mydbflute/dbflute-${example.latest.version}" overwrite="true">
			<fileset dir="${extraction.dir}" />
		</copy>
		<delete dir="${extraction.dir}" />
	</target>

	<target name="reflect-to-example-on-parade" depends="prepare-reflection"
			description="==> reflect to example on parade">
		<delete dir="${example.on.parade.dir}/mydbflute/dbflute-${example.latest.version}" />
		<copy todir="${example.on.parade.dir}/mydbflute/dbflute-${example.latest.version}" overwrite="true">
			<fileset dir="${extraction.dir}" />
		</copy>
		<delete dir="${extraction.dir}" />
	</target>

	<target name="reflect-to-example-on-springboot" depends="prepare-reflection"
			description="==> reflect to example on SpringBoot">
		<delete dir="${example.on.springboot.dir}/mydbflute/dbflute-${example.latest.version}" />
		<copy todir="${example.on.springboot.dir}/mydbflute/dbflute-${example.latest.version}" overwrite="true">
			<fileset dir="${extraction.dir}" />
		</copy>
		<delete dir="${extraction.dir}" />
	</target>

	<target name="reflect-to-example-on-play2java" depends="prepare-reflection"
			description="==> reflect to example on Play2 Java">
		<delete dir="${example.on.play2java.dir}/mydbflute/dbflute-${example.latest.version}" />
		<copy todir="${example.on.play2java.dir}/mydbflute/dbflute-${example.latest.version}" overwrite="true">
			<fileset dir="${extraction.dir}" />
		</copy>
		<delete dir="${extraction.dir}" />
	</target>

	<target name="reflect-to-example-with-non-rdb" depends="prepare-reflection"
			description="==> reflect to example with non-RDB">
		<delete dir="${example.with.non.rdb}/mydbflute/dbflute-${example.latest.version}" />
		<copy todir="${example.with.non.rdb}/mydbflute/dbflute-${example.latest.version}" overwrite="true">
			<fileset dir="${extraction.dir}" />
		</copy>
		<delete dir="${extraction.dir}" />
	</target>

	<target name="reflect-to-example-with-doma" depends="prepare-reflection"
			description="==> reflect to example with Doma">
		<delete dir="${example.with.doma.dir}/mydbflute/dbflute-${example.latest.version}" />
		<copy todir="${example.with.doma.dir}/mydbflute/dbflute-${example.latest.version}" overwrite="true">
			<fileset dir="${extraction.dir}" />
		</copy>
		<delete dir="${extraction.dir}" />
	</target>

	<target name="reflect-to-howto" depends="prepare-reflection"
			description="==> reflect to how-to project">
		<delete dir="${dbflute.howto.dir}/mydbflute/dbflute-${example.latest.version}" />
		<copy todir="${dbflute.howto.dir}/mydbflute/dbflute-${example.latest.version}" overwrite="true">
			<fileset dir="${extraction.dir}" />
		</copy>
		<delete dir="${extraction.dir}" />
	</target>
</project>
